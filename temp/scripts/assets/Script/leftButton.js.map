{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "hand",
    "type",
    "Node",
    "default",
    "back",
    "toppadding",
    "downPadding",
    "onLoad",
    "game",
    "handMoveBy",
    "downMoveBy",
    "node",
    "on",
    "EventType",
    "TOUCH_START",
    "event",
    "ani",
    "getComponent",
    "Animation",
    "moveByLimit",
    "height",
    "y",
    "moveByDis",
    "actionby",
    "moveBy",
    "runAction",
    "play",
    "update",
    "dt",
    "downLimit",
    "downDis"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAK;AACDC,kBAAKN,GAAGO,IADP;AAEDC,qBAAQ;AAFP,SAXG;AAeRC,cAAK;AACDH,kBAAKN,GAAGO,IADP;AAEDC,qBAAQ;AAFP,SAfG;AAmBRE,oBAAW,EAnBH;AAoBRC,qBAAY;AApBJ,KAHP;;AA0BL;AACAC,YAAQ,kBAAY;AAChBZ,WAAGa,IAAH,CAAQC,UAAR,GAAqB,EAArB;AACAd,WAAGa,IAAH,CAAQE,UAAR,GAAqB,CAArB;;AAEC;AACD,aAAKC,IAAL,CAAUC,EAAV,CAAajB,GAAGO,IAAH,CAAQW,SAAR,CAAkBC,WAA/B,EAA4C,UAAUC,KAAV,EAAiB;AACzD;AACA,gBAAIC,MAAM,KAAKhB,IAAL,CAAUiB,YAAV,CAAuBtB,GAAGuB,SAA1B,CAAV;;AAEA,gBAAIC,cAAc,KAAKf,IAAL,CAAUgB,MAAV,GAAiB,CAAjB,GAAqB,KAAKf,UAA1B,GAAuC,KAAKL,IAAL,CAAUoB,MAAV,GAAiB,CAA1E;AACA,gBAAG,KAAKpB,IAAL,CAAUqB,CAAV,GAAcF,WAAjB,EAA6B;AACzB,oBAAIG,YAAa,KAAKtB,IAAL,CAAUqB,CAAV,GAAc1B,GAAGa,IAAH,CAAQC,UAAtB,IAAoCU,WAArC,GAAqDA,cAAc,KAAKnB,IAAL,CAAUqB,CAA7E,GAAkF1B,GAAGa,IAAH,CAAQC,UAA1G;AACA,oBAAIc,WAAW5B,GAAG6B,MAAH,CAAU,GAAV,EAAc,CAAd,EAAgBF,SAAhB,CAAf;AACA;AACA,qBAAKtB,IAAL,CAAUyB,SAAV,CAAoBF,QAApB;AACH;AACDP,gBAAIU,IAAJ,CAAS,SAAT;AACH,SAZD,EAYG,IAZH;AAaH,KA7CI;;AA+CL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAIC,YAAY,CAAC,KAAKzB,IAAL,CAAUgB,MAAX,GAAkB,CAAlB,GAAsB,KAAKpB,IAAL,CAAUoB,MAAV,GAAiB,CAAvC,GAA2C,KAAKd,WAAhE;AACA,YAAIwB,UAAW,KAAK9B,IAAL,CAAUqB,CAAV,GAAc1B,GAAGa,IAAH,CAAQE,UAAtB,IAAoCmB,SAArC,GAAkD,CAAlD,GAAsDlC,GAAGa,IAAH,CAAQE,UAA5E;AACA,aAAKV,IAAL,CAAUqB,CAAV,IAAeS,OAAf;AACH;;AApDI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        hand:{\r\n            type:cc.Node,\r\n            default:null\r\n        },\r\n        back:{\r\n            type:cc.Node,\r\n            default:null\r\n        },\r\n        toppadding:30,\r\n        downPadding:40\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        cc.game.handMoveBy = 60;\r\n        cc.game.downMoveBy = 2;\r\n\r\n         // 使用枚举类型来注册\r\n        this.node.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n            //播放hand上移动画\r\n            var ani = this.hand.getComponent(cc.Animation);\r\n\r\n            var moveByLimit = this.back.height/2 - this.toppadding - this.hand.height/2;\r\n            if(this.hand.y < moveByLimit){\r\n                var moveByDis = (this.hand.y + cc.game.handMoveBy >= moveByLimit) ? (moveByLimit - this.hand.y) : cc.game.handMoveBy;\r\n                var actionby = cc.moveBy(0.2,0,moveByDis);\r\n                // var seq = cc.sequence(cc.moveBy(0.5, 200, 0), cc.moveBy(0.5, -200, 0));\r\n                this.hand.runAction(actionby);\r\n            }\r\n            ani.play(\"handani\");\r\n        }, this);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        var downLimit = -this.back.height/2 + this.hand.height/2 + this.downPadding;\r\n        var downDis = (this.hand.y - cc.game.downMoveBy <= downLimit) ? 0 : cc.game.downMoveBy;\r\n        this.hand.y -= downDis;\r\n    },\r\n\r\n    \r\n});\r\n"
  ]
}